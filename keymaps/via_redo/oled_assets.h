// Copyright 2023 Jacob Thompson @oden42 fenix42@gmail.com
// SPDX-License-Identifier: GPL-3.0-or-later

#pragma once

// clang-format off

// Splash
static const char PROGMEM splash[] = {
	
	0,  0,  0,192,224,224,240,240,240,240,240,240,224,224,224,192,192,224,240, 32,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,128,192,192,192,224, 96, 96, 96,224,224,192,128,  0,  0,  0,  0,  0,  0,  0,128,192,224,240,240,240,240,240,  0,  0, 
	0,128,227,227,243,249, 57,249,249,249,255,255,255,247,199,135,  7,  3,  1,  0,192,224,240,248,248,252, 60, 62,254,254,252,252,252, 56, 16,  0, 24,252,252,254,254,252,120,112, 56, 60,254,254,252,252,248,  0,192,240,248,248,252,252, 62,126,254,252,252,248,240, 56,252,254,254,254,252,248, 28,252,254,254,124,  0, 48,240,248,252,252,248, 48, 48, 56,248,252,252,248,248,112,  0,128,240,252,254,255,255,255,255,243,240,248,248,250,247,199,  7,  3,  0,192,224,240,252, 62, 31,143,255,255,255,255,255, 63, 
	1,128,128,127,255,255,255,255,255,248,224,225,227,255,191,191,159,207,199,224,224,  0,255,255,255,255,255,255,192,128,224,255,255,255,255,135,128,  0,128,240,255,255,255,255,135,  0,  0,  0,255,255,255,255,255, 63,248,255,255,255,255,255,208,152,140,143,199,199,195,128,248,255,255,255,255,255,128,131,131,129,192,192,  0,192,255,255,255,255,  7,  0,  0,192,255,255,255,255,255,  0,  0, 63,255,255,255,255,255,128,  0,  3,255,255,255,255,127, 31,  0, 14, 15, 31, 31, 31, 30, 30,254,255,255,255,255,255, 31, 31,
	15,  7,  1,  0,  1,  3,  3,  7,  7, 15, 15, 15, 15, 15,  7,  7,  7,  3,  3,  1,  0,  0,  0,  3,  7,143,143,135,131,131,131,  7, 15, 15,  7,131,129,128,129,  3,  7,  7,  7, 15, 15, 15, 15,  7,  7,  3,129,129,128,128,129,131,  7,  7, 15, 15,143,135,135,131,131,129,  0,  3,  3,  3,  7,135,143,143, 15,  7,  7,  3,129,128,131,135,135, 15, 15,  7,131,131,128,  3,  7, 15, 15,  7,131,129,128,128,  0,  1,  3,  7,  7,135,134,134,  7,  3,131,129,128,  0,  0,  0,  0,  0,  6,  6,  6,  7,  7,  7,  7,  7,  7,  7,  7,  6, 
	0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 65, 96, 80, 76, 66, 65, 48,  0,  0, 30, 33, 64, 64, 64, 64, 33, 30,  0,  0,  0,  0,  0,  0,  0,  0,  0, 64,127, 68, 68, 78, 64, 49,  0,  0,  0, 64,127, 64, 64, 64, 64, 33, 30,  0,  0,  0, 64,127, 64,  0,  0,  0,  1,  0, 64,127, 64,  0,  1,  0,  0, 64,127, 64,  0,  0,  0, 30, 33, 64, 64, 64, 64, 33, 30,  0,  0,  0, 64,127, 65,  6,  8, 48,127,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
	
	
	0,  0,  0,
};

// Logo in 3 lines
static const char PROGMEM logo1[] = {32, 56, 60,156,158,222,222,254,254,188, 60, 60, 28, 12,  0,128,128,192,192,224,224,224,192,192,128,192,224,224,224,192,192,224,224,192,128,  0,  0,128,192,192,224,224,224,192,128,  0,192,192,224,224,192,224,224,192,  0,192,224,224,192,128,192,224,224,192,128,  0,192,240,248,252, 60, 14,134,134, 30, 30, 28,  0,  0,192,224,112,248,252,254,254,126,  0,  0,};
static const char PROGMEM logo2[] = {252,254,255,255,193,135,159,255,127, 63,158,128,128,252,255,255,255,193,128,255,255,255, 15,  1,128,249,255,255,135,  0,252,255,255,127,  0,240,255,255,255, 99, 32, 49,159,143,  7,  0,224,255,255,255,  0,  7,  7,  1,128,249,255,255, 15,  1,192,255,255,255,  1,127,255,255,255,131,  3,  7,255,255,255, 62, 28, 30, 31, 31, 25,248,255,255,255, 63, 28, 30,  4,};
static const char PROGMEM logo3[] = {0,  1,  3,  3,  7,  7,  7,  7,  3,  3,  3,  1,  0,  1,  3,  7,  7,  3,  1,  3,  7,  7,  3,  1,  1,  3,  3,  7,  7,  7,  3,  1,  0,  0,  0,  1,  3,  3,  7,  7,  3,  3,  1,  1,  0,  1,  3,  3,  3,  7,  7,  3,  1,  0,  1,  3,  7,  7,  3,  1,  3,  7,  7,  3,  1,  0,  0,  1,  3,  3,  2,  3,  3,  1,  0,  0,  0,  0,  2,  3,  3,  3,  3,  3,  3,  3,  2,  0,  0,};

#define CALC_FRAME_DURATION 150  // how long each frame lasts in ms
#define CALCIFER_ANIM_SIZE 48   // number of bytes in array. If you change sprites, minimize for adequate firmware size. max is 1024
uint8_t calcifer_frame = 0;	// Current frame
uint32_t c_anim_timer = 0;	// Timer

// Calcifer
static void render_calcifer(int CALCIFER_X, int CALCIFER_Y) {
    static const char PROGMEM raw_calcifer_idle_a[4][CALCIFER_ANIM_SIZE] = {
		{247, 29,167, 18, 43,  5,169,197,105, 53,185,153,205,205,101, 53, 57, 25, 25, 25, 13, 13, 13, 13, 13, 13, 13, 13, 25, 25, 25, 49, 53,101,205,205,157,189, 57,113,233,197,169, 19,170, 71, 29,247,},
		{247, 29,167, 90,171,  5,233,229,121, 49, 57,157,205,237,101, 53, 49, 17, 25, 25, 13, 13, 13, 13, 77,237,205, 13, 25, 25, 17, 49, 37,101,205,141,157, 57, 57,117,233,197,169, 91,170, 71, 29,247,},
		{247, 29,167, 18, 43,  5,169,197,105, 53,185,153,205,205,101, 53, 57, 25, 25, 25, 13, 13, 13, 13, 13, 13, 45, 13, 25, 25, 25, 49, 53,101,205,205,157,189, 57,113,233,197,169, 19,170, 71, 29,247,},
		{247, 29,167, 90,171,  5,233,229,121, 49, 57,157,205,237,101, 53, 49, 17, 25,153, 13,205,141, 13, 13, 13, 13, 13, 25, 25, 17, 49, 37,101,205,141,157, 57, 57,117,233,197,169, 91,170, 71, 29,247,}
    };
    static const char PROGMEM raw_calcifer_idle_b[4][CALCIFER_ANIM_SIZE] = {
		{255,  0,242, 56,142,231,225,120, 28, 15,  3,  1,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0, 20,120,248,240, 32,  1,  0,  0,  0,  0,  0,  0,  1,  3, 14, 28,120,241,199, 14, 62,248,  0,255,},
		{255,  0,242, 60, 14,199,225,120, 28, 14,  3,  1,  0,  0,  0,  0,  0,  0,  0,128,  0,  0,  1,  0, 16,  1,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  3, 15, 30,120,225,135, 15, 62,248,  0,255,},
		{255,  0,242, 56,142,231,225,120, 28, 15,  3,  1,  0,  0,  0,  0,  0,  0,224,112, 68, 16,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  3, 14, 28,120,241,199, 14, 62,248,  0,255,},
		{255,  0,242, 60, 14,199,225,120, 28, 14,  3,  1,  0,  0,128,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,128,160,  0,  0,  0,  8,  0,  0,  0,  0,  0,  1,  3, 15, 30,120,225,135, 15, 62,248,  0,255,}
    };
    static const char PROGMEM raw_calcifer_idle_c[4][CALCIFER_ANIM_SIZE] = {
		{255,  0,128,240,127,  7,  1,  0,  0,  0,  0,  0,  0,  0,128,224,224,240,248,240,192,128,128,  0,  0,  1,128,128,130,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  7,127,252,  0,  0,255,},
        {255,  0,192,252,127,  7,  1,  0,  0,  0,  0,  0,  0,  0,128,192,240,252,255,255,249,224,192,192,224,224,240,240,224,224,224,192,128,  0,  0,  0,  0,  0,  0,  0,  0,  1,  7,127,248,  0,  0,255,},
		{255,  0,128,240,127,  7,  1,  0,  0,  0,  0,  0,  0, 32,  0,  0,  0,128,128,129,192,192,224,240,248,248,248,252,252,248,241,224,128,  0,  0,  0,  0,  0,  0,  0,  0,  1,  7,127,252,  0,  0,255,},
		{255,  0,192,252,127,  7,  1,  0,  0,  0,  0,  0,  0,  0,  0,128, 64,192,224,224,192,128,208,192,240,251,255,255,255,252,248,224,192,128,  0,  0,  0,  0,  0,  0,  0,  1,  7,127,248,  0,  0,255,}
    };
    static const char PROGMEM raw_calcifer_idle_d[4][CALCIFER_ANIM_SIZE] = {
		{255,  0,231,207,  0,  0,  0,  0,  0,  0,128,192,240,252,255,127,191,223, 95,191,127,255,255,255,255,255,255,255,159,111,247,215,111,158,254,252,248,224,128,  0,  0,  0,  0,  0,207,239,  0,255,},
        {255,  0,231,207,  0,  0,  0,  0,  0,  0,128,224,240,248,255, 63,223,239,175,223, 63,255,255,255,255,255,255,255,159,111,247,215,111,159,254,252,240,224,128,  0,  0,  0,  0,  0,207,239,  0,255,},
		{255,  0,231,207,  0,  0,  0,  0,  0,  0,224,248,252,252,254, 62,223,239,175,223, 63,255,255,255,255,255,255,255,207,183,123,107,183,207,254,248,240,224,192,  0,  0,  0,  0,  0,207,239,  0,255,},
		{255,  0,231,207,  0,  0,  0,  0,  0,  0,128,192,248,254,255,127,191,223, 95,191,127,255,255,255,255,255,255,255,207,183,123,107,183,207,255,252,248,240,192,  0,  0,  0,  0,  0,207,239,  0,255,}
    };
	static const char PROGMEM raw_calcifer_idle_e[4][CALCIFER_ANIM_SIZE] = {
		{255,  0,253,248,  0,124,126,126,126,252,253,249,251,243,247,230,205, 91,123,125,126,127,127,127, 63, 63, 63, 63, 63, 63, 62, 62, 63,223,239,247,243,251,249,252,124,124, 56,  0,248,253,  0,255,},
        {255,  0,253,248,  0,124,126,126,126,252,253,249,251,243,247,231,206, 93,125,126,127,127,127,127, 63, 63, 63, 63, 63, 63, 62, 62, 63,223,239,247,243,251,249,252,124,124, 56,  0,248,253,  0,255,},
		{255,  0,253,248,  0,124,126,126,126,252,253,249,251,243,247,231,206, 93,125,126,127,127,127,127, 63, 63, 63, 63, 63, 63, 63, 63, 63,223,239,247,243,251,249,252,124,124, 56,  0,248,253,  0,255,},
		{255,  0,253,248,  0,124,126,126,126,252,253,249,251,243,247,230,205, 91,123,125,126,127,127,127, 63, 63, 63, 63, 63, 63, 63, 63, 63,223,239,247,243,251,249,252,124,124, 56,  0,248,253,  0,255,}
    };
	static const char PROGMEM raw_calcifer_idle_f[4][CALCIFER_ANIM_SIZE] = {
        {239,184,231, 95,192,132,132,130,130,130,130,162,170,169,169,169,168,168,164,132,132,132,132,164,164,164,164,148,148,146,146,146,130,130,131,139,139,139,139,138,165,165,165,192, 95,231,184,239,},
		{239,184,231, 95,192,132,132,130,130,130,130,162,170,169,169,169,168,168,164,132,132,132,132,164,164,164,164,148,148,146,146,146,130,130,131,139,139,139,139,138,165,165,165,192, 95,231,184,239,},
		{239,184,231, 95,192,132,132,130,130,130,130,162,170,169,169,169,168,168,164,132,132,132,132,164,164,164,164,148,148,146,146,146,130,130,131,139,139,139,139,138,165,165,165,192, 95,231,184,239,},
		{239,184,231, 95,192,132,132,130,130,130,130,162,170,169,169,169,168,168,164,132,132,132,132,164,164,164,164,148,148,146,146,146,130,130,131,139,139,139,139,138,165,165,165,192, 95,231,184,239,}
    };

	void animate_calcifer(void){
		/* switch frame */
		calcifer_frame = (calcifer_frame + 1) % 4;

		oled_set_cursor(CALCIFER_X, CALCIFER_Y);
		oled_write_raw_P(raw_calcifer_idle_a[calcifer_frame], CALCIFER_ANIM_SIZE);
		oled_set_cursor(CALCIFER_X, CALCIFER_Y + 1);
		oled_write_raw_P(raw_calcifer_idle_b[calcifer_frame], CALCIFER_ANIM_SIZE);
		oled_set_cursor(CALCIFER_X, CALCIFER_Y + 2);
		oled_write_raw_P(raw_calcifer_idle_c[calcifer_frame], CALCIFER_ANIM_SIZE);
		oled_set_cursor(CALCIFER_X, CALCIFER_Y + 3);
		oled_write_raw_P(raw_calcifer_idle_d[calcifer_frame], CALCIFER_ANIM_SIZE);
		oled_set_cursor(CALCIFER_X, CALCIFER_Y + 4);
		oled_write_raw_P(raw_calcifer_idle_e[calcifer_frame], CALCIFER_ANIM_SIZE);
		oled_set_cursor(CALCIFER_X, CALCIFER_Y + 5);
		oled_write_raw_P(raw_calcifer_idle_f[calcifer_frame], CALCIFER_ANIM_SIZE);
	}

	#if OLED_TIMEOUT > 0
	/* the animation prevents the normal timeout from occuring */
	if (last_input_activity_elapsed() > OLED_TIMEOUT && last_led_activity_elapsed() > OLED_TIMEOUT) {
		oled_off();
			return;
		} else {
			oled_on();
		}
		#endif

	/* animation timer */
	if (timer_elapsed32(c_anim_timer) > CALC_FRAME_DURATION) {
		c_anim_timer = timer_read32();
		animate_calcifer();
	}
	

}


// Luna code adapted by oden42

#define ANIM_SIZE 32   // number of bytes in array. If you change sprites, minimize for adequate firmware size. max is 1024

/* Sit 1 */
static const char PROGMEM sit1[2][ANIM_SIZE] = {
		/* 'cat_sleep_1', 32x24px */
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x32, 0x2a, 
	 0x26, 0x02, 0x00, 0x00, 0x10, 0x19, 0x1d, 0x17, 0x13, 0x01, 0x00, 0x40, 0xc0, 0x40, 0x00, 0x00,},
		/* 'cat_sleep_2', 32x24px */
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x62, 0x72, 0x5a, 0x4e, 0x46, 0x02, 
	 0x00, 0x00, 0x00, 0x09, 0x0d, 0x0b, 0x09, 0x00, 0x00, 0x90, 0xd0, 0xb0, 0x90, 0x00, 0x00, 0x00,}
};
/* Sit 2 */
static const char PROGMEM sit2[2][ANIM_SIZE] = {
		/* 'cat_sleep_1', 32x24px */
	{0x00, 0x00, 0xc0, 0x60, 0x30, 0x98, 0x0c, 0x04, 0x06, 0x02, 0x22, 0xc3, 0x01, 0x01, 0x01, 0x01, 
	 0x01, 0xf9, 0xc9, 0x59, 0x72, 0x62, 0x22, 0x24, 0x24, 0x68, 0x70, 0x59, 0xc9, 0xf9, 0x00, 0x00,},
		/* 'cat_sleep_2', 32x24px */
	{0x00, 0x00, 0xc0, 0x60, 0x30, 0x98, 0x08, 0x0c, 0x04, 0x04, 0x46, 0x82, 0x02, 0x02, 0x02, 0x02, 
	 0x02, 0xfa, 0xca, 0x5a, 0x72, 0x62, 0x26, 0x24, 0x24, 0x68, 0x70, 0x58, 0xc8, 0xf8, 0x00, 0x00,}
};
/* Sit 3 */
static const char PROGMEM sit3[2][ANIM_SIZE] = {
		/* 'cat_sleep_1', 32x24px */
	{0x00, 0x1f, 0x30, 0x20, 0x20, 0x41, 0x72, 0x7c, 0x7c, 0x78, 0x30, 0x20, 0x21, 0x3e, 0x20, 0x24, 
	 0x24, 0x4f, 0x38, 0x50, 0x64, 0x48, 0x40, 0x50, 0x40, 0x48, 0x64, 0x30, 0x18, 0x2f, 0x44, 0x04,},
		/* 'cat_sleep_2', 32x24px */
	{0x00, 0x1f, 0x30, 0x20, 0x20, 0x41, 0x72, 0x7c, 0x7c, 0x78, 0x30, 0x20, 0x21, 0x3e, 0x20, 0x24, 
	 0x24, 0x4f, 0x38, 0x50, 0x64, 0x48, 0x40, 0x50, 0x40, 0x48, 0x64, 0x30, 0x18, 0x2f, 0x44, 0x04,}
};
/* Walk 1 */
static const char PROGMEM walk1[2][ANIM_SIZE] = {
		/* 'cat_walk_1', 32x24px */
	{0x00, 0x00, 0x00, 0xfc, 0x0e, 0x1f, 0x1f, 0xff, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 
	 0xd8, 0x98, 0xf0, 0x60, 0x20, 0x20, 0x20, 0x38, 0x38, 0x70, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,},
		/* 'cat_walk_2', 32x24px */
	{0x00, 0x00, 0xfc, 0x0e, 0x1f, 0x1f, 0xff, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 
	 0xec, 0x4c, 0x78, 0x30, 0x10, 0x10, 0x10, 0x1c, 0x1c, 0x38, 0xe0, 0x80, 0x00, 0x00, 0x00, 0x00,}	
};
/* Walk 2 */
static const char PROGMEM walk2[2][ANIM_SIZE] = {
		/* 'cat_walk_1', 32x24px */
	{0x00, 0x00, 0x00, 0x0f, 0x18, 0xf0, 0x00, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x01, 0x09, 0x49, 
	 0x25, 0x14, 0x10, 0x20, 0x00, 0x02, 0x40, 0xc0, 0xc8, 0x22, 0x11, 0x1f, 0x24, 0x24, 0x00, 0x00,},
		/* 'cat_walk_2', 32x24px */
	{0x00, 0x00, 0x03, 0x0e, 0x18, 0xe0, 0x00, 0x01, 0x02, 0x02, 0x02, 0x02, 0x01, 0x01, 0x05, 0x15, 
	 0x12, 0x0a, 0x08, 0x10, 0x00, 0x01, 0x20, 0xe0, 0x24, 0x11, 0x08, 0x0f, 0x0a, 0x0a, 0x00, 0x00,}	
};
/* Walk 3 */
static const char PROGMEM walk3[2][ANIM_SIZE] = {
		/* 'cat_walk_1', 32x24px */
	{0x00, 0x00, 0x00, 0x00, 0x3e, 0x63, 0x40, 0x40, 0x30, 0x18, 0x0c, 0x1e, 0x3e, 0x3e, 0x36, 0x04, 
	 0x04, 0x04, 0x1c, 0x3c, 0x38, 0x30, 0x20, 0x43, 0x47, 0x48, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00,},
		/* 'cat_walk_2', 32x24px */
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x3f, 0x3c, 0x30, 0x40, 0x40, 0x46, 0x3f, 0x02, 0x02, 0x02, 
	 0x3e, 0x43, 0x40, 0x40, 0x38, 0x1e, 0x3f, 0x3f, 0x3e, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}	
};
/* Run 1 */
static const char PROGMEM run1[2][ANIM_SIZE] = {
		/* 'cat_run_1', 32x24px */
	{0x3c, 0x7e, 0xde, 0x8e, 0x0c, 0x18, 0x30, 0x60, 0x40, 0xc0, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 
	 0x00, 0x60, 0xe0, 0x60, 0x60, 0xc0, 0xc0, 0x60, 0x60, 0x60, 0x40, 0xc0, 0x80, 0x00, 0x00, 0x00,},
		/* 'cat_run_2', 32x24px */
	{0x00, 0x7c, 0xfe, 0x1e, 0x0e, 0x3c, 0x60, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	 0xe0, 0xe0, 0x60, 0x40, 0xc0, 0x80, 0x80, 0xe0, 0xe0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,}
};
/* Run 2 */
static const char PROGMEM run2[2][ANIM_SIZE] = {
		/* 'cat_run_1', 32x24px */
	{0x00, 0xc0, 0x60, 0x31, 0x1b, 0x0e, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x21, 
	 0x11, 0x91, 0x49, 0x4b, 0x21, 0x41, 0x00, 0x84, 0x80, 0x80, 0x90, 0x44, 0x23, 0x3e, 0x48, 0x90,},
		/* 'cat_run_2', 32x24px */
	{0x00, 0x00, 0x01, 0x03, 0x06, 0x0c, 0xf8, 0x00, 0x00, 0x01, 0x01, 0x01, 0x02, 0x02, 0x22, 0x22, 
	 0x92, 0x93, 0x57, 0x42, 0x83, 0x01, 0x08, 0x00, 0x00, 0x20, 0x89, 0x47, 0x7c, 0x90, 0x90, 0x00,}
};
/* Run 3 */
static const char PROGMEM run3[2][ANIM_SIZE] = {
		/* 'cat_run_1', 32x24px */
	{0x03, 0x0c, 0x08, 0x08, 0x0c, 0x06, 0x03, 0x07, 0x07, 0x07, 0x03, 0x01, 0x01, 0x01, 0x01, 0x03, 
	 0x06, 0x04, 0x04, 0x08, 0x18, 0x10, 0x20, 0x41, 0x43, 0x43, 0x67, 0x3e, 0x3c, 0x38, 0x00, 0x00,},
		/* 'cat_run_2', 32x24px */
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0e, 0x18, 0x30, 0x60, 0x40, 0x43, 0x66, 0x3e, 0x63, 
	 0x40, 0x40, 0x40, 0x78, 0x3e, 0x3e, 0x1b, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}
};
/* Bark 1 */
static const char PROGMEM bark1[2][ANIM_SIZE] = {
		/* 'cat_meow_1', 32x24px */
	{0x00, 0xc0, 0xe0, 0xe0, 0xc0, 0x80, 0x00, 0x20, 0x20, 0x2f, 0xbb, 0x93, 0x1e, 0x0c, 0x04, 0x44, 
	 0x04, 0x07, 0x07, 0x4e, 0x38, 0xe0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,},
		/* 'cat_meow_2', 32x24px */
	{0x00, 0x00, 0xc0, 0xe0, 0xe0, 0xe0, 0xc0, 0x20, 0x20, 0x2f, 0xbb, 0x93, 0x1e, 0x0c, 0x04, 0x44, 
	 0x04, 0x07, 0x07, 0x4e, 0x38, 0xe0, 0x80, 0x80, 0x08, 0x04, 0x40, 0x40, 0x20, 0x00, 0x00, 0x00,}
};
/* Bark 2 */
static const char PROGMEM bark2[2][ANIM_SIZE] = {
		/* 'cat_meow_1', 32x24px */
	{0x00, 0xc3, 0x7f, 0x03, 0x01, 0xe3, 0x1e, 0x00, 0xc1, 0x69, 0x34, 0x02, 0x02, 0x04, 0x00, 0x00, 
	 0x08, 0x08, 0x09, 0x3c, 0xc2, 0x03, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,},
		/* 'cat_meow_2', 32x24px */
	{0x00, 0xff, 0x03, 0x01, 0x01, 0xff, 0x03, 0x00, 0xc1, 0x69, 0x34, 0x02, 0x06, 0x04, 0x00, 0x08, 
	 0x10, 0x0c, 0x15, 0x38, 0xcc, 0x07, 0x08, 0x88, 0x00, 0x00, 0x22, 0x42, 0x02, 0x04, 0x00, 0x00,}
};
/* Bark 3 */
static const char PROGMEM bark3[2][ANIM_SIZE] = {
		/* 'cat_meow_1', 32x24px */
	{0x00, 0x07, 0x1c, 0x30, 0x60, 0x41, 0x43, 0x5e, 0x71, 0x60, 0xc0, 0x80, 0x8c, 0x98, 0xe0, 0x80, 
	 0x80, 0x8f, 0xf0, 0x80, 0xc7, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,},
		/* 'cat_meow_2', 32x24px */
	{0x00, 0x07, 0x1c, 0x30, 0x60, 0x41, 0x43, 0x5e, 0x71, 0x60, 0xc0, 0x80, 0x8c, 0x98, 0xe0, 0x80, 
	 0x80, 0x8f, 0xf0, 0x80, 0xc7, 0x78, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}
};
/* Sneak 1 */
static const char PROGMEM sneak1[2][ANIM_SIZE] = {
		/* 'cat_sneak_1', 32x24px */
	{0xfe, 0x0f, 0x0f, 0x1f, 0x7e, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
	 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,},
		/* 'cat_sneak_2', 32x24px */
	{0xfc, 0x9e, 0x1e, 0x1e, 0x3c, 0x60, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,}
};
/* Sneak 2 */
static const char PROGMEM sneak2[2][ANIM_SIZE] = {
		/* 'cat_sneak_1', 32x24px */
	{0x01, 0x03, 0x86, 0xcc, 0x78, 0x10, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x42, 0x43, 
	 0x23, 0x2d, 0xa9, 0x87, 0x07, 0x03, 0x11, 0x01, 0x01, 0x41, 0x13, 0x8e, 0xf8, 0x20, 0x20, 0x00,},
		/* 'cat_sneak_2', 32x24px */
	{0x00, 0x03, 0x06, 0x0c, 0x18, 0xf0, 0x80, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x42, 
	 0x43, 0x27, 0x2d, 0xa9, 0x87, 0x07, 0x03, 0x11, 0x01, 0x01, 0x41, 0x13, 0x8e, 0xf8, 0x20, 0x20,}
};
/* Sneak 3 */
static const char PROGMEM sneak3[2][ANIM_SIZE] = {
		/* 'cat_sneak_1', 32x24px */
	{0x00, 0x3c, 0x63, 0x40, 0x40, 0x30, 0x18, 0x0c, 0x04, 0x04, 0x06, 0x0e, 0x1e, 0x3e, 0x3e, 0x34, 
	 0x1d, 0x3d, 0x3c, 0x3c, 0x19, 0x10, 0x20, 0x42, 0x42, 0x46, 0x49, 0x30, 0x00, 0x01, 0x01, 0x00,},
		/* 'cat_sneak_2', 32x24px */
	{0x00, 0x00, 0x1c, 0x3e, 0x3f, 0x3f, 0x1f, 0x0f, 0x0e, 0x1c, 0x10, 0x20, 0x60, 0x41, 0x46, 0x7c, 
	 0x46, 0x41, 0x41, 0x40, 0x30, 0x19, 0x1c, 0x3c, 0x3e, 0x3e, 0x1a, 0x01, 0x00, 0x00, 0x01, 0x01,}
};